# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  ## Variables (ruby syntax)
  required_plugins = %w(vagrant-r10k vagrant-timezone)
  plugin_installed = false

  ## Install Vagrant Plugins
  required_plugins.each do |plugin|
    unless Vagrant.has_plugin? plugin
      system "vagrant plugin install #{plugin}"
      plugin_installed = true
    end
  end

  ## Restart Vagrant: if new plugin installed
  if plugin_installed == true
    exec "vagrant #{ARGV.join(' ')}"
  end

  ## Set the guest timezone to the same as the host
  if Vagrant.has_plugin?("vagrant-timezone")
    config.timezone.value = :host
  end


  # r6db
  config.vm.define "r6db" do |r6|
    r6.vm.box_check_update = true

    r6.vm.box = 'tpgtelecom/novus-r6db'
    r6.vm.box_url = 'http://vagrant.it.tpgtelecom.com.au/boxes/novus-r6db/novus-r6db.json'
    r6.vm.box_version = '7.3.28-1'
    r6.vm.provider "virtualbox" do |p|
      p.customize ["modifyvm", :id, "--name", "novus-SG (r6db)"]
      p.customize ["modifyvm", :id, "--memory", 2048]
      p.customize ["modifyvm", :id, "--cpus", 1]
      p.customize ["modifyvm", :id, "--nictype1", "virtio"]
      p.customize ["modifyvm", :id, "--groups", "/Novus 7.3.28-SG"]
    end

    r6.vm.hostname = "novus-r6db.vagrant"
    r6.vm.network "private_network", ip: "10.0.1.102", nic_type: "virtio"
    r6.vm.network "forwarded_port", guest: 1521, host: 1521

    # Uncomment to enable bridge network adapter so that other people can access the VM
    #r6.vm.network "public_network"

    r6.vm.provision "puppet" do |puppet|
      puppet.manifests_path = ["vm", "/vagrant/puppet/manifests"]
      puppet.manifest_file = "r6db.pp"
      puppet.facter = {
        "r6environment" => "vagrant",
	    "r6version" => "7_3_28"
      }
#      puppet.options = "--verbose --debug"
    end
    # WORKAROUND - the above commands give the following error:
    # ==> r6db: Error: Could not parse application options: invalid option: --manifestdir
#    r6.vm.provision :shell, :inline => "/opt/puppetlabs/bin/puppet apply --modulepath=/vagrant/puppet /vagrant/puppet/manifests/r6db.pp"
    r6.vm.provision :shell, :run => "always", :binary => "true", :inline => "cp -rp /vagrant/provisioners /var/tmp/ && chmod -R 777 /var/tmp/provisioners"
    r6.vm.provision :shell, :run => "always", :inline => "/bin/bash /var/tmp/provisioners/refresh_complete_index.sh"
    #r6.vm.provision :shell, :run => "always", :inline => "/bin/bash /var/tmp/provisioners/create_tpg_support_user.sh"
  end


  # r6app
  config.vm.define "r6app", primary: true do |r6|
    r6.vm.box_check_update = true

    r6.vm.box = 'tpgtelecom/novus-r6app'
    r6.vm.box_url = 'http://vagrant.it.tpgtelecom.com.au/boxes/novus-r6app/novus-r6app.json'
    r6.vm.box_version = '7.3.28-1'
    r6.vm.network "forwarded_port", guest: 8080, host: 8080
    r6.vm.network "forwarded_port", guest: 8443, host: 8443
    r6.vm.network "forwarded_port", guest: 8000, host: 8000
    r6.vm.network "forwarded_port", guest: 8025, host: 8025

    r6.vm.provider "virtualbox" do |p|
      p.customize ["modifyvm", :id, "--name", "novus-SG (r6app)"]
      p.customize ["modifyvm", :id, "--memory", 6144]
      p.customize ["modifyvm", :id, "--cpus", 1]
      p.customize ["modifyvm", :id, "--nictype1", "virtio"]
      p.customize ["modifyvm", :id, "--groups", "/Novus 7.3.28-SG"]
    end

    r6.vm.hostname = "novus-r6app.vagrant"
    r6.vm.network "private_network", ip: "10.0.1.101", nic_type: "virtio"
	r6.vm.network "forwarded_port", guest: 8080, host: 8080
	r6.vm.network "forwarded_port", guest: 8443, host: 8443
	r6.vm.network "forwarded_port", guest: 8000, host: 8000
	r6.vm.network "forwarded_port", guest: 8025, host: 80

    #r6.vm.synced_folder "d:\\projects\\git\\NOVUS", "/vagrant/bootstrap"

    # Uncomment to enable bridge network adapter so that other people can access the VM
    #r6.vm.network "public_network"

    r6.vm.boot_timeout = 900

    r6.vm.provision "puppet" do |puppet|
      puppet.manifests_path = ["vm", "/vagrant/puppet/manifests"]
      puppet.manifest_file = "r6app.pp"
      puppet.facter = {
        "r6environment" => "vagrant",
	    "r6version" => "7_3_28"
      }
#      puppet.options = "--verbose --debug"
    end
    # WORKAROUND - the above commands give the following error:
    # ==> r6db: Error: Could not parse application options: invalid option: --manifestdir
#    r6.vm.provision :shell, :run => "always", :inline => "/opt/puppetlabs/bin/puppet apply --modulepath=/vagrant/puppet /vagrant/puppet/manifests/r6app.pp"
  end


  # r6portal
  config.vm.define "r6portal", autostart: false do |r6|
    r6.vm.box_check_update = true

    r6.vm.box = 'tpgtelecom/novus-r6portal'
    r6.vm.box_url = 'http://vagrant.it.tpgtelecom.com.au/boxes/novus-r6portal/novus-r6portal.json'
    r6.vm.box_version = '~>7.3.28-0'

    r6.vm.provider "virtualbox" do |p|
      p.customize ["modifyvm", :id, "--name", "novus (r6portal)"]
      p.customize ["modifyvm", :id, "--memory", 1024]
      p.customize ["modifyvm", :id, "--cpus", 1]
      p.customize ["modifyvm", :id, "--nictype1", "virtio"]
      p.customize ["modifyvm", :id, "--groups", "/Novus 7.3.28"]
    end

    r6.vm.hostname = "novus-r6portal.vagrant"
    r6.vm.network "private_network", ip: "10.0.1.103", nic_type: "virtio"

    # Uncomment to enable bridge network adapter so that other people can access the VM
    #r6.vm.network "public_network"
  end

end
